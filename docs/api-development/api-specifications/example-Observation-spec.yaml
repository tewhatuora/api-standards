openapi: 3.1.0
info:
  title: >-
    Health NZ | Te Whatu Ora :
    API Standards FHIR Example Observation API
  description: An example FHIR API for recording and consuming FHIR `Observation` data</br>
    **Use cases include but are not limited to:**</br>
    - Wearable input - e.g. smart watch recordings</br>
    - Vital signs measurements</br>
  license:
    name: Creative Commons Zero v1.0 Universal
    url: http://spdx.org/licenses/CC0-1.0.html
  version: 1.0.0
  contact:
    name: Health NZ | Te Whatu Ora
    url: https://www.tewhatuora.govt.nz/
servers:
  - url: https://fhir.api.digital.health.nz/R4
    description: API Standards Example FHIR API URL
  - url: https://fhir.api-test.digital.health.nz/R4
    description: API Standards Example FHIR API Test URL
externalDocs:
  url: https://build.fhir.org/ig/tewhatuora/cinc-fhir-ig
  description: FHIR Implementation Guide
tags: 
  - name: searchObservations
    description: Search Observation resources
  - name: getObservation
    description: Retrieve an instance of an Observation resource
  - name: vreadObservation
    description: Retrieve a specific version of an Observation resource
  - name: createObservation
    description: Create Observation resource
  - name: updateObservation
    description: Update Observation resource
  - name: deleteObservation
    description: Delete Observation resource
paths:
  /Observation:
    summary: FHIR Observation resource
    description: >-
      The Manager for resources of type Observation: provides services to manage
      the collection of all the Observation instances
    parameters:
      - $ref: '#/components/parameters/Request-Context'
    get:
      summary: Search all resources of type Observation based on a set of criteria
      operationId: searchObservation
      description: This base resource 
      tags:
        - searchObservations
      security: 
        -  oauth-client-credentials:
            - system/Observation.r
        - api_key: []
      responses:
        '200':
          description: the resource being returned
          content:
            application/fhir+json:
              schema:
                $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Bundle-definition.json
              examples:
                BundleTypeSearchSet:
                  $ref: '#/components/examples/BundleTypeSearchSet'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/Patient'
        - $ref: '#/components/parameters/Encounter'
        - $ref: '#/components/parameters/identifier'
        - $ref: '#/components/parameters/count'
        - name: category
          in: query
          description: The classification of the type of observation
          schema:
            type: string
        - name: performer
          in: query
          description: Who performed the observation
          schema:
            type: string
        - name: status
          in: query
          description: The status of the observation
          schema:
            type: string
        - name: subject
          in: query
          description: The subject that the observation is about
          schema:
            type: string
        - name: _lastUpdated
          in: query
          description: When the resource version last changed
          schema:
            type: string
            pattern: >-
              ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
    post:
      summary: Create a new resource
      operationId: createObservation
      tags:
        - createObservation
      description: Create a new Observation resource
      security: 
        -  oauth-client-credentials:
            - system/Observation.c
        - api_key: []
      requestBody:
        description: The new state of the resource
        required: true
        content:
          application/fhir+json:
            schema:
              $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
      responses:
        '200':
          description: the resource being returned after being updated
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/Request-Context'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/elements'
  /Observation/{rid}:
    summary: Read/Write/etc resource instance of type Observation
    description: >-
      Access to services to manage the state of a single resource of type
      Observation
    get:
      summary: Read the current state of the resource
      operationId: readObservation
      description: Retrieve an instance of an observation resource using the resource's unique id
      tags:
        - getObservation
      security: 
        -  oauth-client-credentials:
            - system/Observation.r
        - api_key: []
      responses:
        '200':
          description: the resource being returned
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/elements'
    put:
      summary: Update the current state of the resource
      operationId: updateObservation
      description: >-
        Update an instance of an observation resource using the resource's unique id.
        Note that this will result in a version of the resource being preserved on the server which can be retrieved using the `vread` parameter
        See vreadObservation
      tags: 
        -  updateObservation
      security: 
        -  oauth-client-credentials:
            - system/Observation.u
        - api_key: []
      requestBody:
        description: The new state of the resource
        required: true
        content:
          application/fhir+json:
            schema:
              $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
      responses:
        '200':
          description: the resource being returned after being updated
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/elements'
    delete:
      summary: Delete the resource so that it no exists (no read, search etc)
      description: Permanently delete an instance of an observation resource from the server
      operationId: deleteObservation
      tags: 
        -  deleteObservation
      security: 
        -  oauth-client-credentials:
            - system/Observation.d
        - api_key: []
      responses:
        '204':
          description: If the resource is deleted - no content is returned
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/rid'
  /Observation/{rid}/_history/{hid}:
    summary: Read a past version of resource instance of type Observation
    description: >-
      Access a to specified previous version of a single resource of type
      Observation
    get:
      summary: Read a past state of the resource
      description: Read the past state of a resource using the resource's unique id and a specific version
      operationId: vreadObservation
      tags:
        - vreadObservation
      security: 
        -  oauth-client-credentials:
            - system/Observation.r
        - api_key: []
      responses:
        '200':
          description: the resource being returned
          headers:
            ETag:
              description: >-
                Version from Resource.meta.version as a weak ETag for that
                version
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/Observation-definition.json
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/hid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/elements'
components:
  responses: 
    '400':
      description: Bad request error. The request failed due to invalid input format or a validation error - retrying the request will not succeed
      content:
        application/fhir+json:
          schema:
            $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/OperationOutcome-definition.json
          examples:
            OperationOutcomeBadRequest:
              $ref: '#/components/examples/OperationOutcomeBadRequest'
    '404':
      description: Resource not found error. The request failed as the requested resource could not be found on the server.
      content:
        application/fhir+json:
          schema:
            $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/OperationOutcome-definition.json
          examples:
            OperationOutcomeNotFound:
              $ref: '#/components/examples/OperationOutcomeNotFound'
    '500':
      description: Server error
      content:
        application/fhir+json:
          schema:
            $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-definitions-oas/OperationOutcome-definition.json
          examples:
            OperationOutcomeServerError:
              $ref: '#/components/examples/OperationsOutcomeServerError'
  examples:
    OperationOutcomeNotFound:
        summary: An example OperationOutcome payload when the requested resource is not found.
        value: 
          $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/OperationOutcomeNotFound-example.json
    OperationOutcomeBadRequest:
      summary: An example OperationOutcome payload when the request is invalid.
      value:
        $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/OperationOutcomeBadRequest-example.json
    OperationsOutcomeServerError:
      summary: A generic server error
      value:
        $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/OperationOutcomeServerError-example.json
    BundleTypeSearchSet:
      summary: A bundle of type searchset containing search results
      value:
        $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/Bundle-type-searchset.json
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
    oauth-client-credentials:
      type: oauth2
      description: Client credentials flow for system to system authentication
      flows:
        clientCredentials:
          tokenUrl: https://npd.auth.services.health.nz/realms/hnz-integration/protocol/openid-connect/token
          scopes:
            system/Observation.r: Grant read access to Observation resources
            system/Observation.c: Grant create access to Observation resources
            system/Observation.u: Grant update access to Observation resources
            system/Observation.d: Grant delete access to Observation resources
            system/Observation.rs: Grant read and search access to Observation resources
            system/Observation.crus: Grant full permissions to Observation resources
  parameters:
    hid:
      name: hid
      in: path
      description: id of the history entry (=Resource.meta.versionId)
      required: true
      allowEmptyValue: false
      style: simple
      schema:
        type: string
        format: uuid
        example:
          $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/uuid.txt
    rid:
      name: rid
      in: path
      description: id of the resource (=Resource.id)
      required: true
      allowEmptyValue: false
      style: simple
      schema:
        type: string
        example:
          $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/uuid.txt
    summary:
      name: _summary
      in: query
      description: Requests the server to return a designated subset of the resource
      allowEmptyValue: true
      style: form
      schema:
        type: string
        enum:
          - 'true'
          - text
          - data
          - count
          - 'false'
    elements:
      name: _elements
      in: query
      description: Requests the server to return a collection of elements from the resource
      allowEmptyValue: true
      style: form
      explode: false
      schema:
        type: array
        format: string
        items:
          format: string
    count:
      name: _count
      in: query
      description: >-
        The maximum number of search results on a page. The server is not bound
        to return the number requested, but cannot return more
      schema:
        type: number
    Request-Context:
      name: Request-Context
      in: header
      description: Request context header definition
      schema: 
        $ref: '#/components/schemas/Request-Context'
    Date:
      name: date
      in: query
      description: "Search for Observations by `date`"
      schema:
        type: string
        format: date
        example: "2024-05-10"
    identifier:
      name: identifier
      in: query
      description: "Search for Observation resources by `Observation.identifier`"
      schema:
        type: string
        example:
          $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/uuid.txt
    Patient:
      name: patient
      in: query
      description: "Search for Observations by `Patient`"
      schema:
        type: string
        example: "ZXP7823"
    Encounter:
      name: encounter
      in: query
      description: "Search for Observations by an associated `Encounter` ID"
      schema:
        type: string
        example:
          $ref: https://raw.githubusercontent.com/tewhatuora/schemas/main/fhir-examples/uuid.txt
  schemas:
    Request-Context:
      type: object
      properties: 
        userIdentifier:
          type: string
          example: AABBCC
        userRole:
          type: string
        secondaryIdentifiers: 
          type: object
          properties: 
            use: 
              type: string
            system: 
              type: string
            value: 
              type: string
          required: 
          - use
          - system
          - value
      required: 
      - userIdentifier
      - userRole
      - secondaryIdentifiers